name: CI

on:
  push:
    branches: [ main ]
    paths:
      - 'packages/shared/**'
      - 'apps/backend/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'packages/shared/**'
      - 'apps/backend/**'

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      shared: ${{ steps.filter.outputs.shared }}
      notification: ${{ steps.filter.outputs.notification }}
      quote: ${{ steps.filter.outputs.quote }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check for file changes
        uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            shared:
              - 'packages/shared/**'
            notification:
              - 'apps/backend/notification-service/**'
              - 'packages/shared/**'
            quote:
              - 'apps/backend/quote-service/**'
              - 'packages/shared/**'

  shared:
    needs: changes
    if: ${{ needs.changes.outputs.shared == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.14.0'

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10.6.3

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Lint
        run: cd packages/shared && pnpm lint

      - name: Test
        run: cd packages/shared && pnpm test

      - name: Build
        run: cd packages/shared && pnpm build

  notification-service:
    needs: [changes, shared]
    if: |
      needs.changes.outputs.notification == 'true' ||
      needs.changes.outputs.shared == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.14.0'

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10.6.3

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Lint
        run: cd apps/backend/notification-service && pnpm lint

      - name: Test
        run: cd apps/backend/notification-service && pnpm test

      - name: Build shared package
        run: cd packages/shared && pnpm build

      - name: Build service
        run: cd apps/backend/notification-service && pnpm build

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./apps/backend/notification-service/Dockerfile
          push: false
          tags: notification-service:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  quote-service:
    needs: [changes, shared]
    if: |
      needs.changes.outputs.quote == 'true' ||
      needs.changes.outputs.shared == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.14.0'

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10.6.3

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Lint
        run: cd apps/backend/quote-service && pnpm lint

      - name: Test
        run: cd apps/backend/quote-service && pnpm test

      - name: Build shared package
        run: cd packages/shared && pnpm build

      - name: Build service
        run: cd apps/backend/quote-service && pnpm build

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./apps/backend/quote-service/Dockerfile
          push: false
          tags: quote-service:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
